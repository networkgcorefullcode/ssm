openapi: 3.0.3
info:
  title: SSM (Secure Storage Manager) API
  description: |
    API para gestión segura de claves criptográficas usando PKCS#11 y HSM.
    
    El SSM proporciona operaciones seguras de:
    - Generación de claves AES
    - Cifrado y descifrado de datos
    - Almacenamiento de claves
    - Gestión mediante HSM/SoftHSM
    
    ## Autenticación
    La API funciona a través de Unix Domain Sockets para mayor seguridad.
    Tambien da soporte a HTTPS con certificados TLS. No implementado aun.
    
    ## Formatos de datos
    - Todos los datos binarios (plaintext, ciphertext, IV) deben estar en Base64
    - Las respuestas incluyen timestamps en formato RFC3339
    - Los errores siguen el estándar RFC 7807 (Problem Details)
    
  version: 1.0.0
  contact:
    name: SSM API Support
    email: support@yourorganization.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost
    description: Local Unix Socket Server
    
tags:
  - name: Key Management
    description: Operaciones de gestión de claves criptográficas
  - name: Encryption
    description: Operaciones de cifrado y descifrado
  - name: Health
    description: Endpoints de monitoreo y salud

paths:
  /generate-aes-key:
    post:
      tags:
        - Key Management
      summary: Generar nueva clave AES
      description: |
        Genera una nueva clave AES simétrica en el HSM con el tamaño especificado.
        La clave se almacena de forma persistente y se referencia por su label.
      operationId: generateAESKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenAESKeyRequest'
            examples:
              aes256:
                summary: Clave AES-256
                value:
                  label: "MySecretKey"
                  id: "key001"
                  bits: 256
              aes128:
                summary: Clave AES-128
                value:
                  label: "TestKey128"
                  id: "test128"
                  bits: 128
      responses:
        '201':
          description: Clave generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenAESKeyResponse'
              examples:
                success:
                  summary: Respuesta exitosa
                  value:
                    handle: 123456789
                    label: "MySecretKey"
                    id: "key001"
                    bits: 256
        '400':
          $ref: '#/components/responses/BadRequest'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /encrypt:
    post:
      tags:
        - Encryption
      summary: Cifrar datos
      description: |
        Cifra datos usando una clave AES almacenada en el HSM.
        Genera un IV aleatorio único para cada operación de cifrado.
      operationId: encryptData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptRequest'
            examples:
              simple:
                summary: Cifrado simple
                value:
                  key_label: "MySecretKey"
                  plain_b64: "SGVsbG8gV29ybGQh"
      responses:
        '200':
          description: Datos cifrados exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptResponse'
              examples:
                success:
                  summary: Cifrado exitoso
                  value:
                    cipher_b64: "YWJjZGVmZ2hpams..."
                    iv_b64: "MTIzNDU2Nzg5MEFCQ0RFRg=="
                    ok: true
                    time_created: "2024-10-03T10:15:30Z"
                    time_updated: "2024-10-03T10:15:30Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/KeyNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /decrypt:
    post:
      tags:
        - Encryption
      summary: Descifrar datos
      description: |
        Descifra datos usando una clave AES almacenada en el HSM.
        Requiere el mismo IV usado durante el cifrado.
      operationId: decryptData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecryptRequest'
            examples:
              simple:
                summary: Descifrado simple
                value:
                  key_label: "MySecretKey"
                  cipher_b64: "YWJjZGVmZ2hpams..."
                  iv_b64: "MTIzNDU2Nzg5MEFCQ0RFRg=="
      responses:
        '200':
          description: Datos descifrados exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecryptResponse'
              examples:
                success:
                  summary: Descifrado exitoso
                  value:
                    plain_b64: "SGVsbG8gV29ybGQh"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/KeyNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /store-key:
    post:
      tags:
        - Key Management
      summary: Almacenar clave existente
      description: |
        Almacena una clave criptográfica existente en el HSM.
        La clave debe proporcionarse en formato adecuado.
      operationId: storeKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreKeyRequest'
            examples:
              simple:
                summary: Almacenar clave
                value:
                  key_label: "ImportedKey"
                  id: "imported001"
                  key_value: "YmFzZTY0X2VuY29kZWRfa2V5"
      responses:
        '201':
          description: Clave almacenada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreKeyResponse'
              examples:
                success:
                  summary: Clave almacenada
                  value:
                    handle: 987654321
                    cipher_key: "encrypted_key_value"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    GenAESKeyRequest:
      type: object
      required:
        - label
        - id
        - bits
      properties:
        label:
          type: string
          description: Etiqueta única para identificar la clave
          minLength: 1
          maxLength: 256
          example: "MySecretKey"
        id:
          type: string
          description: Identificador único de la clave
          minLength: 1
          maxLength: 64
          example: "key001"
        bits:
          type: integer
          description: Tamaño de la clave en bits
          enum: [128, 192, 256]
          example: 256
      example:
        label: "MySecretKey"
        id: "key001"
        bits: 256

    GenAESKeyResponse:
      type: object
      properties:
        handle:
          type: integer
          format: uint
          description: Handle de la clave en el HSM
          example: 123456789
        label:
          type: string
          description: Etiqueta de la clave generada
          example: "MySecretKey"
        id:
          type: string
          description: ID de la clave generada
          example: "key001"
        bits:
          type: integer
          description: Tamaño de la clave generada
          example: 256

    EncryptRequest:
      type: object
      required:
        - key_label
        - plain_b64
      properties:
        key_label:
          type: string
          description: Etiqueta de la clave para cifrar
          minLength: 1
          example: "MySecretKey"
        plain_b64:
          type: string
          format: byte
          description: Datos a cifrar codificados en Base64
          example: "SGVsbG8gV29ybGQh"
      example:
        key_label: "MySecretKey"
        plain_b64: "SGVsbG8gV29ybGQh"

    EncryptResponse:
      type: object
      properties:
        cipher_b64:
          type: string
          format: byte
          description: Datos cifrados en Base64
          example: "YWJjZGVmZ2hpams..."
        iv_b64:
          type: string
          format: byte
          description: Vector de inicialización en Base64
          example: "MTIzNDU2Nzg5MEFCQ0RFRg=="
        ok:
          type: boolean
          description: Indica si la operación fue exitosa
          example: true
        time_created:
          type: string
          format: date-time
          description: Timestamp de creación en RFC3339
          example: "2024-10-03T10:15:30Z"
        time_updated:
          type: string
          format: date-time
          description: Timestamp de actualización en RFC3339
          example: "2024-10-03T10:15:30Z"

    DecryptRequest:
      type: object
      required:
        - key_label
        - cipher_b64
        - iv_b64
      properties:
        key_label:
          type: string
          description: Etiqueta de la clave para descifrar
          minLength: 1
          example: "MySecretKey"
        cipher_b64:
          type: string
          format: byte
          description: Datos cifrados en Base64
          example: "YWJjZGVmZ2hpams..."
        iv_b64:
          type: string
          format: byte
          description: Vector de inicialización en Base64 (mismo usado para cifrar)
          example: "MTIzNDU2Nzg5MEFCQ0RFRg=="
        id:
          type: integer
          description: ID opcional para tracking
          example: 12345
      example:
        key_label: "MySecretKey"
        cipher_b64: "YWJjZGVmZ2hpams..."
        iv_b64: "MTIzNDU2Nzg5MEFCQ0RFRg=="

    DecryptResponse:
      type: object
      properties:
        plain_b64:
          type: string
          format: byte
          description: Datos descifrados en Base64
          example: "SGVsbG8gV29ybGQh"

    StoreKeyRequest:
      type: object
      required:
        - key_label
        - id
        - key_value
      properties:
        key_label:
          type: string
          description: Etiqueta para la clave almacenada
          minLength: 1
          example: "ImportedKey"
        id:
          type: string
          description: Identificador único
          minLength: 1
          example: "imported001"
        key_value:
          type: string
          format: byte
          description: Valor de la clave en Base64
          example: "YmFzZTY0X2VuY29kZWRfa2V5"

    StoreKeyResponse:
      type: object
      properties:
        handle:
          type: integer
          format: uint
          description: Handle de la clave almacenada
          example: 987654321
        cipher_key:
          type: string
          description: Clave cifrada almacenada
          example: "encrypted_key_value"

    ProblemDetails:
      type: object
      description: Detalles de error según RFC 7807
      properties:
        title:
          type: string
          description: Título breve del problema
          example: "Validation Error"
        detail:
          type: string
          description: Descripción detallada del problema
          example: "Label is required"
        status:
          type: integer
          description: Código de estado HTTP
          example: 400
        error:
          type: string
          description: Código de error interno
          example: "validation_failed"
        instance:
          type: string
          format: uri
          description: URI que identifica la ocurrencia específica
          example: "/generate-aes-key"

  responses:
    BadRequest:
      description: Solicitud inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            validation:
              summary: Error de validación
              value:
                title: "Validation Error"
                detail: "Label is required"
                status: 400
                error: "validation_failed"
            badJson:
              summary: JSON inválido
              value:
                title: "Invalid JSON"
                detail: "Failed to parse request body"
                status: 400
                error: "bad_json"

    KeyNotFound:
      description: Clave no encontrada
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            title: "Key Not Found"
            detail: "Key with label 'NonExistentKey' not found"
            status: 404
            error: "key_not_found"

    MethodNotAllowed:
      description: Método HTTP no permitido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            title: "Method Not Allowed"
            detail: "Only POST method is allowed"
            status: 405
            error: "method_not_allowed"

    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            hsm_error:
              summary: Error de HSM
              value:
                title: "Key Generation Failed"
                detail: "Failed to generate AES key: pkcs11 session invalid"
                status: 500
                error: "hsm_error"
            general:
              summary: Error general
              value:
                title: "Internal Server Error"
                detail: "An unexpected error occurred"
                status: 500
                error: "internal_error"

    ServiceUnavailable:
      description: Servicio no disponible
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            title: "Service Unavailable"
            detail: "HSM connection lost"
            status: 503
            error: "service_unavailable"

  examples:
    Base64Examples:
      summary: Ejemplos de datos en Base64
      description: |
        Ejemplos de datos comunes codificados en Base64:
        - "Hello World!" → "SGVsbG8gV29ybGQh"
        - "Secret Message" → "U2VjcmV0IE1lc3NhZ2U="
        - "Test data 123" → "VGVzdCBkYXRhIDEyMw=="

security: []

externalDocs:
  description: Documentación adicional de SSM
  url: https://github.com/networkgcorefullcode/ssm/blob/main/README.md